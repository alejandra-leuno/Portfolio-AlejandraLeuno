# -*- coding: utf-8 -*-
"""Generación Dataset Ventas.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1Wnh1dfeiZWh3HXdVqG0-7ihxdSd0f8ZN
"""

import pandas as pd
import numpy as np
import random
!pip install faker
from faker import Faker
from datetime import datetime, timedelta

# Inicializar Faker y establecer semilla para reproducibilidad
fake = Faker()
np.random.seed(42)

# Definir el rango de fechas (últimos 12 meses)
start_date = datetime(2023, 3, 1)
end_date = datetime(2024, 3, 1)
date_range = pd.date_range(start=start_date, end=end_date, freq='D')

# Definir categorías y productos de Electrónica
categorias = ['Celulares', 'Laptops', 'Tablets', 'Auriculares', 'Smartwatches']
productos = {
    'Celulares': ['iPhone 13', 'Samsung Galaxy S22', 'Xiaomi Redmi Note 11'],
    'Laptops': ['MacBook Air M2', 'Dell XPS 13', 'Lenovo ThinkPad X1'],
    'Tablets': ['iPad Air', 'Samsung Galaxy Tab S8', 'Amazon Fire HD'],
    'Auriculares': ['AirPods Pro', 'Sony WH-1000XM5', 'Bose QuietComfort 45'],
    'Smartwatches': ['Apple Watch Series 8', 'Samsung Galaxy Watch 5', 'Fitbit Versa 3']
}

# Eventos especiales con impacto en ventas
eventos_especiales = {
    '2023-05-15': 'Hot Sale',
    '2023-11-24': 'Black Friday',
    '2023-12-25': 'Navidad',
    '2024-02-14': 'San Valentín'
}

# Generar dataset
ventas = []
for date in date_range:
    for _ in range(np.random.randint(5, 20)):  # Ventas diarias aleatorias
        categoria = random.choice(categorias)
        producto = random.choice(productos[categoria])
        precio_unitario = round(np.random.uniform(50, 2000), 2)  # Precio entre $50 y $2000
        cantidad_vendida = np.random.randint(1, 5)  # Cantidad entre 1 y 5 unidades
        descuento = np.random.choice([0, 5, 10, 15, 20], p=[0.6, 0.15, 0.1, 0.1, 0.05])  # Mayor probabilidad de 0%
        total_venta = round(cantidad_vendida * precio_unitario * (1 - descuento / 100), 2)
        metodo_pago = random.choice(['Tarjeta Crédito', 'Tarjeta Débito', 'Efectivo', 'Cuotas'])
        region = random.choice(['Buenos Aires', 'Córdoba', 'Santa Fe', 'Mendoza', 'Neuquén'])
        evento = eventos_especiales.get(date.strftime('%Y-%m-%d'), 'Normal')

        # Introducir datos nulos y erróneos
        if np.random.rand() < 0.02:
            precio_unitario = None  # Datos nulos
        if np.random.rand() < 0.02:
            cantidad_vendida = -abs(cantidad_vendida)  # Errores en cantidad

        ventas.append([date, categoria, producto, precio_unitario, cantidad_vendida, descuento, total_venta, metodo_pago, region, evento])

# Crear DataFrame
df_ventas = pd.DataFrame(ventas, columns=['Fecha', 'Categoría', 'Producto', 'Precio Unitario', 'Cantidad Vendida', 'Descuento (%)', 'Total Venta', 'Método de Pago', 'Región', 'Evento Especial'])

# Guardar en CSV
df_ventas.to_csv('ventas_ecommerce.csv', index=False)

# Mostrar primeras filas
df_ventas.head()